/**
 * Grid
 */
.grid {
	@include make-grid();
}

.cell,
[class*="cell-"] {
	@include make-cell-default();
}

.grid-gap-none {
	@include make-grid-gap(0);
}

.grid-gap-small {
	@include make-grid-gap($grid-gap-small);
}

@include media-breakpoint-up(sm) {
	.grid-gap-large {
		@include make-grid-gap($grid-gap-large);
	}
}

.cell {
	@include make-cell();
}

.flexbox {
	display: -webkit-flex;
	display: flex;
	-webkit-flex-direction: column;
	flex-direction: column;
	-webkit-flex-wrap: wrap;
	flex-wrap: wrap;
	height: 100vw;
}

.g-item {
	position: relative;
	width: 32%; // 3 column

	img {
		width: 100%;
		display: block;
		transition: all .8s;
	}
}

// Mediaqueries
@media (max-width : 860px) {

	// set to 2 column
	.flexbox {
		height: 220vw;

		.item {
			width: 50%;
		}
	}
}

@media (max-width : 667px) {

	// set to 1 column
	.flexbox {
		height: auto;

		.item {
			width: 100%;
		}
	}
}

.cell-auto {
	@include make-cell-auto();
}

@for $i from 1 through $grid-cells {
	.cell-#{$i} {
		@include make-cell-size($i, $grid-cells);
	}
}

@each $breakpoint in map-keys($media-breakpoints) {
	$infix: "#{$breakpoint}";

	@include media-breakpoint-up($breakpoint, $media-breakpoints) {
		.cell-#{$infix} {
			@include make-cell();
		}

		.cell-#{$infix}-auto {
			@include make-cell-auto();
		}

		@for $i from 1 through $grid-cells {
			.cell-#{$infix}-#{$i} {
				@include make-cell-size($i, $grid-cells);
			}
		}
	}
}